apiVersion: v1
kind: Service
metadata:
  name: backend-service
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  type: ClusterIP
  ports:
  - name: "backend-service"
    port: 8080
  selector:
    app: backend-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-service
  template:
    metadata:
      labels:
        app: backend-service
    spec:
      containers:
      - image: bujosa/do2122-c07
        name: backend-service
        envFrom:
        - secretRef: 
            name: planet-backend

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  type: ClusterIP
  ports:
  - name: "frontend-service"
    port: 3000
  selector:
    app: frontend-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-service
  template:
    metadata:
      labels:
        app: frontend-service
    spec:
      containers:
      - name: frontend-service
        image: bujosa/do2122-c07-frontend
        envFrom:
        - secretRef:
            name: planet

---

# This part is if you want to use your own database
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongo-service
# spec:
#   type: ClusterIP
#   ports:
#   - name: "mongo-service"
#     port: 27017
#   selector:
#     app: mongo-service

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mongo-service
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongo-service
#   template:
#     metadata:
#       labels:
#         app: mongo-service
#     spec:
#       containers:
#       - image: mongo
#         name: mongo-service
 